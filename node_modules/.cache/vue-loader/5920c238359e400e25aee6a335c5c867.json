{"remainingRequest":"F:\\workspace\\jf_front_end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\workspace\\jf_front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\jf_front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\jf_front_end\\src\\views\\demo\\plugins\\day\\index.vue?vue&type=template&id=03763f44&","dependencies":[{"path":"F:\\workspace\\jf_front_end\\src\\views\\demo\\plugins\\day\\index.vue","mtime":1604992859739},{"path":"F:\\workspace\\jf_front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}