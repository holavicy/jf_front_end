{"remainingRequest":"F:\\workspace\\jf_front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\jf_front_end\\src\\views\\demo\\playground\\db\\public\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\workspace\\jf_front_end\\src\\views\\demo\\playground\\db\\public\\index.vue","mtime":1590460801194},{"path":"F:\\workspace\\jf_front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyB1bmlxdWVJZCB9IGZyb20gJ2xvZGFzaCcNCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4Jw0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZGF0YURpc3BsYXk6ICcnLA0KICAgICAga2V5TmFtZVRvU2V0OiAnJywNCiAgICAgIHZhbHVlVG9TZXQ6ICcnLA0KICAgICAga2V5TmFtZUxpc3Q6IFtdLA0KICAgICAga2V5TmFtZVRvRGVsZXRlOiAnJw0KICAgIH0NCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICBrZXlOYW1lVG9EZWxldGUgKHZhbHVlKSB7DQogICAgICBpZiAodmFsdWUpIHsNCiAgICAgICAgdGhpcy5oYW5kbGVEZWxldGUodmFsdWUpDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkICgpIHsNCiAgICB0aGlzLmxvYWQoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLi4ubWFwQWN0aW9ucygnZDJhZG1pbi9kYicsIFsNCiAgICAgICdkYXRhYmFzZScsDQogICAgICAnZGF0YWJhc2VDbGVhcicNCiAgICBdKSwNCiAgICAvKioNCiAgICAgKiDliqDovb3mnKzlnLDmlbDmja4NCiAgICAgKi8NCiAgICBhc3luYyBsb2FkICgpIHsNCiAgICAgIGNvbnN0IGRiID0gYXdhaXQgdGhpcy5kYXRhYmFzZSgpDQogICAgICB0aGlzLmRhdGFEaXNwbGF5ID0gSlNPTi5zdHJpbmdpZnkoZGIudmFsdWUoKSwgbnVsbCwgMikNCiAgICAgIHRoaXMua2V5TmFtZUxpc3QgPSBPYmplY3Qua2V5cyhkYi52YWx1ZSgpKS5tYXAoayA9PiAoew0KICAgICAgICB2YWx1ZTogaywNCiAgICAgICAgbGFiZWw6IGsNCiAgICAgIH0pKQ0KICAgIH0sDQogICAgLyoqDQogICAgICog5Yig6Zmk5LiA5Liq5a2X5q61DQogICAgICovDQogICAgYXN5bmMgaGFuZGxlRGVsZXRlIChuYW1lKSB7DQogICAgICBjb25zdCBkYiA9IGF3YWl0IHRoaXMuZGF0YWJhc2UoKQ0KICAgICAgZGINCiAgICAgICAgLnVuc2V0KG5hbWUpDQogICAgICAgIC53cml0ZSgpDQogICAgICB0aGlzLmxvYWQoKQ0KICAgICAgdGhpcy5rZXlOYW1lVG9EZWxldGUgPSAnJw0KICAgIH0sDQogICAgLyoqDQogICAgICog5riF56m65b2T5YmN55So5oi355qE5pWw5o2uDQogICAgICovDQogICAgYXN5bmMgaGFuZGxlQ2xlYXIgKCkgew0KICAgICAgYXdhaXQgdGhpcy5kYXRhYmFzZUNsZWFyKCkNCiAgICAgIHRoaXMubG9hZCgpDQogICAgfSwNCiAgICAvKioNCiAgICAgKiDmt7vliqDkuIDkuKrmlbDmja4NCiAgICAgKi8NCiAgICBhc3luYyBoYW5kbGVTZXQgKCkgew0KICAgICAgaWYgKHRoaXMua2V5TmFtZVRvU2V0ID09PSAnJykgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCflrZfmrrXlkI3kuI3og73kuLrnqbonKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIGNvbnN0IGRiID0gYXdhaXQgdGhpcy5kYXRhYmFzZSgpDQogICAgICBkYg0KICAgICAgICAuc2V0KHRoaXMua2V5TmFtZVRvU2V0LCB0aGlzLnZhbHVlVG9TZXQpDQogICAgICAgIC53cml0ZSgpDQogICAgICB0aGlzLmxvYWQoKQ0KICAgIH0sDQogICAgLyoqDQogICAgICog5re75Yqg5LiA5Liq6ZqP5py65pWw5o2uDQogICAgICovDQogICAgYXN5bmMgaGFuZGxlU2V0UmFuZG9tICgpIHsNCiAgICAgIGNvbnN0IGlkID0gdW5pcXVlSWQoKQ0KICAgICAgY29uc3QgZGIgPSBhd2FpdCB0aGlzLmRhdGFiYXNlKCkNCiAgICAgIGRiDQogICAgICAgIC5zZXQoYHVuaXF1ZUtleSR7aWR9YCwgYHZhbHVlJHtpZH1gKQ0KICAgICAgICAud3JpdGUoKQ0KICAgICAgdGhpcy5sb2FkKCkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/demo/playground/db/public","sourcesContent":["<template>\r\n  <d2-container>\r\n    <template slot=\"header\">\r\n      <el-alert\r\n        type=\"success\"\r\n        :closable=\"false\"\r\n        title=\"公用存储指所有用户共用的存储区域，\r\n          使用 await this.$store.dispatch('d2admin/db/database') 获得存储实例进行操作\"/>\r\n    </template>\r\n    <el-row>\r\n      <el-col :span=\"12\">\r\n        <p class=\"d2-mt-0\">增加不重复字段</p>\r\n        <el-button @click=\"handleSetRandom\">增加</el-button>\r\n        <p>增加自定义字段</p>\r\n        <el-input v-model=\"keyNameToSet\" placeholder=\"字段名\" class=\"d2-mr-5\" style=\"width: 100px;\"/>\r\n        <el-input v-model=\"valueToSet\" placeholder=\"值\" class=\"d2-mr-5\" style=\"width: 100px;\"/>\r\n        <el-button @click=\"handleSet\">增加</el-button>\r\n        <p>删除字段</p>\r\n        <el-select\r\n          v-model=\"keyNameToDelete\"\r\n          placeholder=\"请选择要删除的 key\">\r\n          <el-option\r\n            v-for=\"item in keyNameList\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n        <p>清空当前用户数据</p>\r\n        <el-button @click=\"handleClear\">清空</el-button>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <d2-highlight :code=\"dataDisplay\"/>\r\n      </el-col>\r\n    </el-row>\r\n  </d2-container>\r\n</template>\r\n\r\n<script>\r\nimport { uniqueId } from 'lodash'\r\nimport { mapActions } from 'vuex'\r\nexport default {\r\n  data () {\r\n    return {\r\n      dataDisplay: '',\r\n      keyNameToSet: '',\r\n      valueToSet: '',\r\n      keyNameList: [],\r\n      keyNameToDelete: ''\r\n    }\r\n  },\r\n  watch: {\r\n    keyNameToDelete (value) {\r\n      if (value) {\r\n        this.handleDelete(value)\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    ...mapActions('d2admin/db', [\r\n      'database',\r\n      'databaseClear'\r\n    ]),\r\n    /**\r\n     * 加载本地数据\r\n     */\r\n    async load () {\r\n      const db = await this.database()\r\n      this.dataDisplay = JSON.stringify(db.value(), null, 2)\r\n      this.keyNameList = Object.keys(db.value()).map(k => ({\r\n        value: k,\r\n        label: k\r\n      }))\r\n    },\r\n    /**\r\n     * 删除一个字段\r\n     */\r\n    async handleDelete (name) {\r\n      const db = await this.database()\r\n      db\r\n        .unset(name)\r\n        .write()\r\n      this.load()\r\n      this.keyNameToDelete = ''\r\n    },\r\n    /**\r\n     * 清空当前用户的数据\r\n     */\r\n    async handleClear () {\r\n      await this.databaseClear()\r\n      this.load()\r\n    },\r\n    /**\r\n     * 添加一个数据\r\n     */\r\n    async handleSet () {\r\n      if (this.keyNameToSet === '') {\r\n        this.$message.error('字段名不能为空')\r\n        return\r\n      }\r\n      const db = await this.database()\r\n      db\r\n        .set(this.keyNameToSet, this.valueToSet)\r\n        .write()\r\n      this.load()\r\n    },\r\n    /**\r\n     * 添加一个随机数据\r\n     */\r\n    async handleSetRandom () {\r\n      const id = uniqueId()\r\n      const db = await this.database()\r\n      db\r\n        .set(`uniqueKey${id}`, `value${id}`)\r\n        .write()\r\n      this.load()\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}