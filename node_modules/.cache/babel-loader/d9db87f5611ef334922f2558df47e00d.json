{"remainingRequest":"F:\\workspace\\jf_front_end\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\jf_front_end\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\workspace\\jf_front_end\\src\\api\\modules\\upload.js","dependencies":[{"path":"F:\\workspace\\jf_front_end\\src\\api\\modules\\upload.js","mtime":1593413475280},{"path":"F:\\workspace\\jf_front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHNlcnZpY2UgPSBfcmVmLnNlcnZpY2UsCiAgICAgIHJlcXVlc3QgPSBfcmVmLnJlcXVlc3QsCiAgICAgIHNlcnZpY2VGb3JNb2NrID0gX3JlZi5zZXJ2aWNlRm9yTW9jaywKICAgICAgcmVxdWVzdEZvck1vY2sgPSBfcmVmLnJlcXVlc3RGb3JNb2NrLAogICAgICBtb2NrID0gX3JlZi5tb2NrLAogICAgICBmYWtlciA9IF9yZWYuZmFrZXIsCiAgICAgIHRvb2xzID0gX3JlZi50b29sczsKICByZXR1cm4gewogICAgVVBMT0FEX1RFU1Q6IGZ1bmN0aW9uIFVQTE9BRF9URVNUKGRhdGEpIHsKICAgICAgcmV0dXJuIHJlcXVlc3QoewogICAgICAgIHVybDogJy90ZXN0JywKICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICBjb25maWc6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICB9LAogICAgICAgIGRhdGE6IGRhdGEKICAgICAgfSk7CiAgICB9CiAgfTsKfSk7"},{"version":3,"sources":["F:/workspace/jf_front_end/src/api/modules/upload.js"],"names":["service","request","serviceForMock","requestForMock","mock","faker","tools","UPLOAD_TEST","data","url","method","config"],"mappings":"AAAA,gBAAe;AAAA,MAAGA,OAAH,QAAGA,OAAH;AAAA,MAAYC,OAAZ,QAAYA,OAAZ;AAAA,MAAqBC,cAArB,QAAqBA,cAArB;AAAA,MAAqCC,cAArC,QAAqCA,cAArC;AAAA,MAAqDC,IAArD,QAAqDA,IAArD;AAAA,MAA2DC,KAA3D,QAA2DA,KAA3D;AAAA,MAAkEC,KAAlE,QAAkEA,KAAlE;AAAA,SAA+E;AAC1FC,IAAAA,WAD0F,uBAC7EC,IAD6E,EACvE;AACjB,aAAOP,OAAO,CAAC;AACbQ,QAAAA,GAAG,EAAE,OADQ;AAEbC,QAAAA,MAAM,EAAE,MAFK;AAGbC,QAAAA,MAAM,EAAE;AACN,0BAAgB;AADV,SAHK;AAMbH,QAAAA,IAAI,EAAJA;AANa,OAAD,CAAd;AAQD;AAVyF,GAA/E;AAAA,CAAf","sourcesContent":["export default ({ service, request, serviceForMock, requestForMock, mock, faker, tools }) => ({\r\n    UPLOAD_TEST (data) {\r\n      return request({\r\n        url: '/test',\r\n        method: 'post',\r\n        config: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        data\r\n      })\r\n    }\r\n  })\r\n"]}]}