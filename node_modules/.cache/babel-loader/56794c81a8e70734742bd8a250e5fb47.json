{"remainingRequest":"F:\\workspace\\jf_front_end\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\jf_front_end\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\workspace\\jf_front_end\\src\\api\\modules\\file.js","dependencies":[{"path":"F:\\workspace\\jf_front_end\\src\\api\\modules\\file.js","mtime":1590460801053},{"path":"F:\\workspace\\jf_front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\workspace\\jf_front_end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHNlcnZpY2UgPSBfcmVmLnNlcnZpY2UsCiAgICAgIHJlcXVlc3QgPSBfcmVmLnJlcXVlc3QsCiAgICAgIHNlcnZpY2VGb3JNb2NrID0gX3JlZi5zZXJ2aWNlRm9yTW9jaywKICAgICAgcmVxdWVzdEZvck1vY2sgPSBfcmVmLnJlcXVlc3RGb3JNb2NrLAogICAgICBtb2NrID0gX3JlZi5tb2NrLAogICAgICBmYWtlciA9IF9yZWYuZmFrZXIsCiAgICAgIHRvb2xzID0gX3JlZi50b29sczsKICByZXR1cm4gewogICAgLyoqDQogICAgICogQGRlc2NyaXB0aW9uIOivt+axgumhueebruS4reeahOaWh+S7tg0KICAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwg5paH5Lu25Zyw5Z2ADQogICAgICovCiAgICBGSUxFX0dFVDogZnVuY3Rpb24gRklMRV9HRVQoKSB7CiAgICAgIHZhciB1cmwgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICcnOwogICAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgICAgYmFzZVVSTDogcHJvY2Vzcy5lbnYuQkFTRV9VUkwsCiAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgbWV0aG9kOiAnZ2V0JwogICAgICB9KTsKICAgIH0KICB9Owp9KTs="},{"version":3,"sources":["F:/workspace/jf_front_end/src/api/modules/file.js"],"names":["service","request","serviceForMock","requestForMock","mock","faker","tools","FILE_GET","url","baseURL","process","env","BASE_URL","method"],"mappings":"AAAA,gBAAe;AAAA,MAAGA,OAAH,QAAGA,OAAH;AAAA,MAAYC,OAAZ,QAAYA,OAAZ;AAAA,MAAqBC,cAArB,QAAqBA,cAArB;AAAA,MAAqCC,cAArC,QAAqCA,cAArC;AAAA,MAAqDC,IAArD,QAAqDA,IAArD;AAAA,MAA2DC,KAA3D,QAA2DA,KAA3D;AAAA,MAAkEC,KAAlE,QAAkEA,KAAlE;AAAA,SAA+E;AAC5F;;;;AAIAC,IAAAA,QAL4F,sBAKxE;AAAA,UAAVC,GAAU,uEAAJ,EAAI;AAClB,aAAOP,OAAO,CAAC;AACbQ,QAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,QADR;AAEbJ,QAAAA,GAAG,EAAHA,GAFa;AAGbK,QAAAA,MAAM,EAAE;AAHK,OAAD,CAAd;AAKD;AAX2F,GAA/E;AAAA,CAAf","sourcesContent":["export default ({ service, request, serviceForMock, requestForMock, mock, faker, tools }) => ({\r\n  /**\r\n   * @description 请求项目中的文件\r\n   * @param {String} url 文件地址\r\n   */\r\n  FILE_GET (url = '') {\r\n    return request({\r\n      baseURL: process.env.BASE_URL,\r\n      url,\r\n      method: 'get'\r\n    })\r\n  }\r\n})\r\n"]}]}